{"version":3,"sources":["services/api.js","components/CharacterCard.js","images/gifError.gif","components/CharacterList.js","components/Filters.js","components/CharacterDetail.js","images/LogoRickMorty.png","components/App.js","reportWebVitals.js","index.js"],"names":["fetch","then","response","json","data","results","CharacterCard","props","title","to","id","className","src","img","alt","name","species","CharacterList","character","map","card","image","length","handleFilter","gif","Filters","onSubmit","ev","preventDefault","htmlFor","value","textInput","type","onChange","target","CharacterDetail","console","log","origin","episode","status","App","useState","setCharacter","setTextInput","useEffect","api","filtered","filter","toUpperCase","includes","exact","path","logo","render","routeCharacterId","parseInt","match","params","characterId","foundCharacter","find","undefined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2664d6ec.chunk.js","sourcesContent":["const getDataFromApi = () => {\n  //console.log(\"obteniendo datos...\");\n  return fetch(\"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\")\n    .then(response => response.json())\n    .then(data => {\n      //console.log(data);\n      //console.log(\"ya tengo los datos\");\n      return data.results;\n\n    });\n};\n\nexport default {\n  getDataFromApi: getDataFromApi\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\n\nconst CharacterCard = (props) => {\n  //console.log(\"yo soy card\", props);\n  return <Link title=\"Details character\" to={`/character-detail/${props.id}`}>\n  <section className=\"article\">\n    <img className=\"characterCard_photo\" src={props.img} alt=\"Main character\" />\n    <h3 className=\"character_title link\">{props.name}</h3>\n    <h4 className=\"character_title\">{props.species}</h4>\n  </section>\n  </Link>\n} \nexport default CharacterCard;  \n","export default __webpack_public_path__ + \"static/media/gifError.7a1186d9.gif\";","import CharacterCard from \"./CharacterCard\";\nimport gif from \"../images/gifError.gif\"\n\nconst CharacterList = (props) => {\n  const character = props.character.map(card => (\n    <li key={card.id}>\n      <CharacterCard img={card.image} name={card.name} species={card.species} id={card.id} />\n    </li>\n\n  ));\n  return props.character.length > 0 ? (<ul>{character} {props.handleFilter}</ul>) : <div className=\"gif\"><p>Error we cant find the character! </p>  <img className=\"gif_error\" alt=\"gif rick and morty\" src={gif}/></div>;\n};\n\n\nexport default CharacterList;","import React from \"react\";\nconst Filters = (props) => {\n  const handleFilter = (ev) => {\n    //console.log(ev.target.value);\n    props.handleFilter(ev.target.value);\n  };\n  //FUNCION  PARA EL INTRO \n  const handleFormSubmit = (ev) => {\n    ev.preventDefault();\n  }\n  return (\n    <form className=\"form\" onSubmit={handleFormSubmit}>\n      <label className=\"character_title label\" htmlFor=\"name\">Buscar por nombre</label>\n      <input className=\"character_input\" value={props.textInput} type=\"text\" id=\"name\" onChange={handleFilter} />\n    </form>\n  );\n\n};\nexport default Filters;\n\n\n\n\n","import { Link } from \"react-router-dom\";\n\nconst CharacterDetail = (props) => {\n  console.log(props.origin.name);\n  return <form>\n    <div className=\"characterDetail_container\">\n      <div className=\" characterDetail_containerImg\">\n        <img className=\"characterDetail_imgDetail\" src={props.image} alt=\"Main character\" />\n        </div>\n        <div className=\"characterDetail_containerInfo\">\n        <h3 className=\"characterDetail detailName\">Name: {props.name}</h3>\n        <h3 className=\"characterDetail detailSpieces\">Species: {props.species}</h3>\n        <h3 className=\"characterDetail detailOrigin\">Origin: {props.origin.name}</h3>\n        <h3 className=\"characterDetail detailEpisode\">Episode: {props.episode.length}</h3>\n        <h3 className=\"characterDetail detailSatuts\">Status: {props.status}</h3>\n        <Link  className=\"characterLink\" title=\"character\" to=\"/\">\n           <button className=\"characterDetail_ home\" title=\"volver\">Home</button>\n          </Link>\n    </div>\n    </div>\n  </form>\n}\nexport default CharacterDetail; ","export default __webpack_public_path__ + \"static/media/LogoRickMorty.f26938d5.png\";","import { useState, useEffect } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport '../App.scss';\nimport api from \"../services/api\";\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport logo from \"../images/LogoRickMorty.png\"; \n\n\n\n\n\n\nconst App = () => {\n  //ESTADO ARRAY\n  const [character, setCharacter] = useState([]);\n  //ESTADO INPUT\n  const [textInput, setTextInput] = useState(\"\");\n\n  //DATA FROM API\n  useEffect(() => {\n    //console.log(\"me monto\")\n    api.getDataFromApi().then(data => {\n      //console.log(data);\n      setCharacter(data);\n    });\n  }, []);\n\n  //EVENTO INPUT PASA POR LIFTING\n  const handleFilter = textInput => {\n    setTextInput(textInput);\n  };\n\n\n  // EVENTO FILTERS\n\n  const filtered = character.filter((character) => {\n    return character.name.toUpperCase().includes(textInput.toUpperCase());\n  });\n\n\n\n  //EVENTO SWITCH TARJETA DETALLES\n\n  const renderDetail = props => {\n    const routeCharacterId = parseInt(props.match.params.characterId);\n    const foundCharacter = character.find((card) => {\n      if (routeCharacterId === card.id) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    if (foundCharacter !== undefined) {\n      console.log(\"soy FoundCharacter\", foundCharacter);\n      return <CharacterDetail\n        image={foundCharacter.image}\n        name={foundCharacter.name}\n        species={foundCharacter.species}\n        origin={foundCharacter.origin}\n        episode={foundCharacter.episode}\n        status={foundCharacter.status} />;\n    }\n\n  };\n\n\n\n\n  return (\n    <div className=\"App\">\n\n      <Switch>\n        <Route exact path=\"/\">\n        <img className=\"img_home\"alt=\"Ricky and Morty\" src={logo} /> \n          <Filters handleFilter={handleFilter} textInput={textInput} />\n          <CharacterList character={filtered}/>\n        </Route>\n        <Route path=\"/character-detail/:characterId\" render={renderDetail} />\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}