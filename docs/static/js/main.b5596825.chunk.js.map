{"version":3,"sources":["services/api.js","components/CharacterCard.js","components/CharacterList.js","components/Filters.js","components/CharacterDetail.js","components/App.js","reportWebVitals.js","index.js"],"names":["fetch","then","response","json","data","results","CharacterCard","props","className","src","img","alt","title","to","id","name","species","CharacterList","character","map","card","image","length","handleFilter","setTextInput","Filters","onSubmit","ev","preventDefault","htmlFor","value","textInput","type","onChange","target","CharacterDetail","console","log","origin","episode","status","App","useState","setCharacter","useEffect","api","filtered","filter","toUpperCase","includes","exact","path","render","routeCharacterId","parseInt","match","params","characterId","foundCharacter","find","undefined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5596825.chunk.js","sourcesContent":["const getDataFromApi = () => {\n  //console.log(\"obteniendo datos...\");\n  return fetch(\"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\")\n    .then(response => response.json())\n    .then(data => {\n      //console.log(data);\n      //console.log(\"ya tengo los datos\");\n      return data.results;\n\n    });\n};\n\nexport default {\n  getDataFromApi: getDataFromApi\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CharacterCard = (props) => {\n  //console.log(\"yo soy card\", props);\n  return <section className=\"article\">\n    <img className=\"characterCard_photo\" src={props.img} alt=\"Main character\" />\n    <Link title=\"Details character\" to={`/character-detail/${props.id}`}><h3 className=\"character_title link\">{props.name}</h3></Link>\n    <h4 className=\"character_title\">{props.species}</h4>\n  </section>\n}\nexport default CharacterCard;  \n","import CharacterCard from \"./CharacterCard\";\n\nconst CharacterList = (props) => {\n  const character = props.character.map(card => (\n    <li key={card.id}>\n      <CharacterCard img={card.image} name={card.name} species={card.species} id={card.id} />\n    </li>\n\n  ));\n  return props.character.length > 0 ? (<ul>{character} {props.handleFilter}</ul>) : <p>No hay ning√∫n personaje que coincida con la palabra {props.setTextInput}</p>;\n};\n\n\nexport default CharacterList;","import React from \"react\";\nconst Filters = (props) => {\n  const handleFilter = (ev) => {\n    //console.log(ev.target.value);\n    props.handleFilter(ev.target.value);\n  };\n  //FUNCION  PARA EL INTRO \n  const handleFormSubmit = (ev) => {\n    ev.preventDefault();\n  }\n  return (\n    <form className=\"form\" onSubmit={handleFormSubmit}>\n      <label className=\"character_title label\" htmlFor=\"name\">Buscar por nombre</label>\n      <input value={props.textInput} type=\"text\" id=\"name\" onChange={handleFilter} />\n    </form>\n  );\n\n};\nexport default Filters;\n\n\n\n\n","import { Link } from \"react-router-dom\";\n\nconst CharacterDetail = (props) => {\n  console.log(props.origin.name);\n  return <form>\n    <Link title=\"character\" to=\"/\">\n      <button className=\"detailVolver\" title=\"volver\">Volver</button>\n    </Link>\n    <div className=\"container\">\n      <div className=\"divDetails\">\n        <img className=\"imgDetail\" src={props.image} alt=\"Main character\" />\n      </div>\n      <div className=\"divInfo\">\n        <h3 className=\"character_title detailCard\">Name: {props.name}</h3>\n        <h3 className=\"character_title detailCard\">Species: {props.species}</h3>\n        <h3 className=\"character_title detailCard\">Origin: {props.origin.name}</h3>\n        <h3 className=\"character_title detailCard\">Episode: {props.episode.length}</h3>\n        <h3 className=\"character_title detailCard\">Status: {props.status}</h3>\n      </div>\n    </div>\n  </form>\n}\nexport default CharacterDetail; ","import { useState, useEffect } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport '../App.scss';\nimport api from \"../services/api\";\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\nimport CharacterDetail from \"./CharacterDetail\";\n/* import logo from \"../images/Logo_Rick_and_Morty\"; */\n\n\n\n\n\nconst App = () => {\n  //ESTADO ARRAY\n  const [character, setCharacter] = useState([]);\n  //ESTADO INPUT\n  const [textInput, setTextInput] = useState(\"\");\n\n  //DATA FROM API\n  useEffect(() => {\n    //console.log(\"me monto\")\n    api.getDataFromApi().then(data => {\n      //console.log(data);\n      setCharacter(data);\n    });\n  }, []);\n\n  //EVENTO INPUT PASA POR LIFTING\n  const handleFilter = textInput => {\n    setTextInput(textInput);\n  };\n\n\n  // EVENTO FILTERS\n\n  const filtered = character.filter((character) => {\n    return character.name.toUpperCase().includes(textInput.toUpperCase());\n  });\n\n\n\n  //EVENTO SWITCH TARJETA DETALLES\n\n  const renderDetail = props => {\n    const routeCharacterId = parseInt(props.match.params.characterId);\n    const foundCharacter = character.find((card) => {\n      if (routeCharacterId === card.id) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    if (foundCharacter !== undefined) {\n      console.log(\"soy FoundCharacter\", foundCharacter);\n      return <CharacterDetail\n        image={foundCharacter.image}\n        name={foundCharacter.name}\n        species={foundCharacter.species}\n        origin={foundCharacter.origin}\n        episode={foundCharacter.episode}\n        status={foundCharacter.status} />;\n    }\n\n  };\n\n\n\n\n  return (\n    <div className=\"App\">\n      {/*  <img alt=\"Ricky and Morty\" src={logo} /> */}\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Filters handleFilter={handleFilter} textInput={textInput} />\n          <CharacterList character={filtered} />\n        </Route>\n        <Route path=\"/character-detail/:characterId\" render={renderDetail} />\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}